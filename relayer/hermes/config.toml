# Description of the parameters below can be found here: https://hermes.informal.systems/documentation/configuration/description.html
# The global section has parameters that apply globally to the relayer operation.
[global]

# Specify the verbosity for the relayer logging output. Default: 'info'
# Valid options are 'error', 'warn', 'info', 'debug', 'trace'.
log_level = 'info'

# Specify the mode to be used by the relayer. [Required]
[mode]

# Specify the client mode.
[mode.clients]

# Whether or not to enable the client workers. [Required]
enabled = true

# Whether or not to enable periodic refresh of clients. [Default: true]
# This feature only applies to clients that underlie an open channel.
# For Tendermint clients, the frequency at which Hermes refreshes them is 2/3 of their
# trusting period (e.g., refresh every ~9 days if the trusting period is 14 days).
# Note: Even if this is disabled, clients will be refreshed automatically if
#      there is activity on a connection or channel they are involved with.
refresh = true

# Whether or not to enable misbehaviour detection for clients. [Default: true]
misbehaviour = true

# Specify the connections mode.
[mode.connections]

# Whether or not to enable the connection workers for handshake completion. [Required]
enabled = true

# Specify the channels mode.
[mode.channels]

# Whether or not to enable the channel workers for handshake completion. [Required]
enabled = true

# Specify the packets mode.
[mode.packets]

# Whether or not to enable the packet workers. [Required]
enabled = true

# Parametrize the periodic packet clearing feature.
# Interval (in number of blocks) at which pending packets
# should be periodically cleared. A value of '0' will disable
# periodic packet clearing. [Default: 100]
clear_interval = 0 # set to 0, for requeueing packets as defined below in `tx_confirmation`

# Whether or not to clear packets on start. [Default: true]
clear_on_start = true

# Toggle the transaction confirmation mechanism.
# The tx confirmation mechanism periodically queries the `/tx_search` RPC
# endpoint to check that previously-submitted transactions
# (to any chain in this config file) have been successfully delivered.
# If they have not been, and `clear_interval = 0`, then those packets are
# queued up for re-submission.
# If set to `false`, the following telemetry metrics will be disabled:
# `acknowledgment_packets_confirmed`, `receive_packets_confirmed` and `timeout_packets_confirmed`.
# [Default: false]
tx_confirmation = true

# Auto register the counterparty payee on a destination chain to
# the relayer's address on the source chain. This can be used
# for simple configuration of the relayer to receive fees for
# relaying RecvPacket on fee-enabled channels.
# For more complex configuration, turn this off and use the CLI
# to manually register the payee addresses.
# [Default: false]
auto_register_counterparty_payee = false

# The REST section defines parameters for Hermes' built-in RESTful API.
# https://hermes.informal.systems/rest.html
[rest]

# Whether or not to enable the REST service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the RESTful
# API requests. Default: 127.0.0.1
host = '0.0.0.0' # need to set this to `0.0.0.0` to allow external access within docker! check here: https://github.com/informalsystems/hermes/issues/3592#issuecomment-1712645510

# Specify the port over which the built-in HTTP server will serve the restful API
# requests. Default: 3000
port = 3000


# The telemetry section defines parameters for Hermes' built-in telemetry capabilities.
# https://hermes.informal.systems/telemetry.html
[telemetry]

# Whether or not to enable the telemetry service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the metrics
# gathered by the telemetry service. Default: 127.0.0.1
host = '0.0.0.0' # need to set this to `0.0.0.0` to allow external access within docker! check here: https://github.com/informalsystems/hermes/issues/3592#issuecomment-1712645510

# Specify the port over which the built-in HTTP server will serve the metrics gathered
# by the telemetry service. Default: 3001
port = 3001

[telemetry.buckets.latency_submitted]
start = 500
end = 20000
buckets = 10

[telemetry.buckets.latency_confirmed]
start = 1000
end = 30000
buckets = 10

[[chains]]
id = 'elgafar-1'
type = 'CosmosSdk'
rpc_addr = 'https://rpc.elgafar-1.stargaze-apis.com:443' # 'https://stargaze-rpc.polkachu.com:443' 'https://rpc.elgafar-1.stargaze-apis.com:443'
grpc_addr = 'http://grpc-1.elgafar-1.stargaze-apis.com:26660' # 'http://stargaze-grpc.polkachu.com:13790' # 'http://grpc-1.elgafar-1.stargaze-apis.com:26660'
rpc_timeout = '10s'
account_prefix = 'stars'
key_name = 'stargaze_ark_relayer'
store_prefix = 'ibc'
default_gas = 40000
max_gas = 1500000
gas_multiplier = 1.3
max_msg_num = 1 # relay only 1 packet, otherwise max gas is exceeded
max_tx_size = 4194304 # 4MiB
clock_drift = '60s'
max_block_time = '30s'
client_refresh_rate = "1/3"
ccv_consumer_chain = false
memo_prefix = 'Powered by Ark Protocol'
sequential_batch_tx = false
# trusting_period = '1209599s' # 14 days (unbonding period) minus 1 sec
# address_type = { derivation = 'cosmos' }

[chains.event_source]
mode = 'push'
url = 'wss://rpc.elgafar-1.stargaze-apis.com:443/websocket' # 'wss://stargaze-rpc.polkachu.com:443/websocket' 'wss://rpc.elgafar-1.stargaze-apis.com:443/websocket'
batch_delay = '500ms'

[chains.trust_threshold]
numerator = '1'
denominator = '3'

[chains.gas_price]
price = 0.04
denom = 'ustars'

[chains.packet_filter]
policy = 'allow'
list = [
  # Stargaze ICS721 channels
  ['wasm.stars1qsnggmry7h6wt9du0yhdknz4jvxt2csh6dcp4pgx7j35yyhc55csnpgsc3', 'channel-947'],
]

[chains.packet_filter.min_fees]

[chains.address_type]
derivation = 'cosmos'

[[chains]]
id = "osmo-test-5"
type = "CosmosSdk"
rpc_addr = "https://rpc.osmotest5.osmosis.zone" # "https://rpc.osmotest5.osmosis.zone:443" "https://rpc.osmo.test.yieldpay.finance:443" "osmosis-testnet-rpc.polkachu.com:443"
grpc_addr = "https://grpc.osmo.test.yieldpay.finance:443" # "https://grpc.osmotest5.osmosis.zone" "https://grpc.osmo.test.yieldpay.finance:443"
rpc_timeout = "10s"
# trusted_node = false
account_prefix = "osmo"
key_name = "osmosis_ark_relayer"
key_store_type = "Test"
store_prefix = "ibc"
default_gas = 100000
max_gas = 4000000
gas_multiplier = 1.3
max_msg_num = 30
max_tx_size = 180000
# max_grpc_decoding_size = 33554432
# query_packets_chunk_size = 50
clock_drift = "5s"
max_block_time = "30s"
client_refresh_rate = "1/3"
ccv_consumer_chain = false
memo_prefix = ""
sequential_batch_tx = false

[chains.event_source]
mode = "push"
url = "wss://rpc.osmo.test.yieldpay.finance/websocket"
batch_delay = "500ms"

[chains.trust_threshold]
numerator = 2
denominator = 3

[chains.gas_price]
price = 0.025
denom = "uosmo"

[chains.packet_filter]
policy = "allow"
list = [
  # Osmosis ICS721 channels
  ['wasm.osmo1dmq9t48uauuu2c9lgeed3jymkngsyjvk5rrdg20rktdpnseck0dseh9djq', 'channel-7866'],
]

[chains.packet_filter.min_fees]

# [chains.dynamic_gas_price]
# enabled = false
# multiplier = 1.1
# max = 0.6

[chains.address_type]
derivation = "cosmos"

[chains.excluded_sequences]

# [tracing_server]
# enabled = false
# port = 5555
